# 服务端口号
server:
  port: 8080

### log4j2配置 ###
logging:
  config: classpath:log4j2.xml

### 配置Mybatis-plus的xml路径，多个用逗号隔开 ###
mybatis-plus:
  mapper-locations: classpath*:/mapping/*.xml

spring:
  cloud:
    ### 注册中心地址
    nacos:
      discovery:
        server-addr: ${NACOS_DISCOVERY_SERVER_ADDR}
    ### sentinel dashboard
    sentinel:
      transport:
        dashboard: ${SENTINEL_DASHBOARD_URI}
      # 取消Sentinel控制台懒加载
      eager: true
  ### 为true设置的是web开启sleuth功能
  sleuth:
    web:
      client:
        enabled: true
    # 可以设置为小数，最大值为1.0，当设置为1.0时就是链路数据100%收集到zipkin-server，当设置为0.1时，即10%概率收集链路数据
    sampler:
      probability: 1.0
  ### 指定了 Zipkin 服务器的地址
  zipkin:
    base-url: ${ZIPKIN_BASE_URI}

  datasource:
    druid:
      ### 数据库配置
      url: jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?zeroDateTimeBehavior=CONVERT_TO_NULL&useUnicode=true&characterEncoding=${DATABASE_CHARSET}&autoReconnect=true&useSSL=false&serverTimezone=GMT%2B8
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: ${DATABASE_USER}
      password: ${DATABASE_PASSWORD}
      ### 连接池配置
      initial-size: 2
      min-idle: 1
      max-active: 20
      test-on-borrow: true
      ### SQL监控统计配置
      filters: stat,wall
      filter:
        stat:
          enabled: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 2000
      web-stat-filter:
        enabled: false
      ### 在线监控面板账号密码
      stat-view-servlet:
        enabled: true
        url-pattern: "/druid/*"
        reset-enable: false
        login-username: admin
        login-password: qQk29Wt5yN1wKbyN

  flyway:
    # flyway是否启用, 生产/stg为true, 测试环境为false, 因为测试环境经常多个分支的切换
    enabled: ${SPRING_FLYWAY_ENABLED}
    # sql文件位置（db/migration是默认路径，放在resource下，需要手动创建）
    locations: classpath:db/migration
    # flyway版本表
    table: d_devops_flyway_schemas_version
    encoding: utf-8
    baseline-on-migrate: true
    validate-on-migrate: false

  ### Redis配置
  redis:
    # 数据库索引（默认为0）
    database: ${REDIS_DB_INDEX}
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 5000ms
  # JSON时区
  jackson:
    time-zone: Asia/Shanghai

### 健康监控 - actuator 配置
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always