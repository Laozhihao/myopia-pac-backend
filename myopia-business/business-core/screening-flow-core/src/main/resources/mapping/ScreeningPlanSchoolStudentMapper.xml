<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wupol.myopia.business.core.screening.flow.domain.mapper.ScreeningPlanSchoolStudentMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.wupol.myopia.business.core.screening.flow.domain.model.ScreeningPlanSchoolStudent">
    </resultMap>
    <resultMap id="GradeClassesDTO" type="com.wupol.myopia.business.core.screening.flow.domain.dto.GradeClassesDTO">
    </resultMap>
    <resultMap id="ScreeningStudentDTO" type="com.wupol.myopia.business.core.screening.flow.domain.dto.ScreeningStudentDTO">
    </resultMap>
    <resultMap id="StudentVisionScreeningResultExportDTO" type="com.wupol.myopia.business.core.screening.flow.domain.dto.StudentVisionScreeningResultExportDTO">
    </resultMap>
    <resultMap id="CommonDiseasePlanStudent" type="com.wupol.myopia.business.core.screening.flow.domain.dto.CommonDiseasePlanStudent">
    </resultMap>
    <resultMap id="SchoolCountDO" type="com.wupol.myopia.business.core.screening.flow.domain.dos.SchoolCountDO">
    </resultMap>
    <resultMap id="PlanStudentInfoDTO" type="com.wupol.myopia.business.core.screening.flow.domain.dto.PlanStudentInfoDTO">
    </resultMap>

    <!-- 通用查询条件 -->
    <sql id="Base_Where_Clause">
        <where>
            <trim prefixOverrides="and">
                <if test="@Ognl@isNotEmpty(id)">and `id` = #{id}</if>
                <if test="@Ognl@isNotEmpty(srcScreeningNoticeId)">and `src_screening_notice_id` = #{srcScreeningNoticeId}</if>
                <if test="@Ognl@isNotEmpty(screeningPlanId)">and `screening_plan_id` = #{screeningPlanId}</if>
                <if test="@Ognl@isNotEmpty(schoolId)">and `school_id` = #{schoolId}</if>
                <if test="@Ognl@isNotEmpty(planDistrictId)">and `plan_district_id` = #{planDistrictId}</if>
                <if test="@Ognl@isNotEmpty(schoolDistrictId)">and `school_district_id` = #{schoolDistrictId}</if>
                <if test="@Ognl@isNotEmpty(screeningTaskId)">and `screening_task_id` = #{screeningTaskId}</if>
                <if test="@Ognl@isNotEmpty(schoolName)">and `school_name` = #{schoolName}</if>
                <if test="@Ognl@isNotEmpty(gradeId)">and `grade_id` = #{gradeId}</if>
                <if test="@Ognl@isNotEmpty(screeningOrgId)">and `screening_org_id` = #{screeningOrgId}</if>
                <if test="@Ognl@isNotEmpty(gradeType)">and `grade_type` = #{gradeType}</if>
                <if test="@Ognl@isNotEmpty(classId)">and `class_id` = #{classId}</if>
                <if test="@Ognl@isNotEmpty(studentId)">and `student_id` = #{studentId}</if>
                <if test="@Ognl@isNotEmpty(idCard)">and `id_card` = #{idCard}</if>
                <if test="@Ognl@isNotEmpty(birthday)">and `birthday` = #{birthday}</if>
                <if test="@Ognl@isNotEmpty(gender)">and `gender` = #{gender}</if>
                <if test="@Ognl@isNotEmpty(studentAge)">and `student_age` = #{studentAge}</if>
                <if test="@Ognl@isNotEmpty(studentSituation)">and `student_situation` = #{studentSituation}</if>
                <if test="@Ognl@isNotEmpty(studentNo)">and `student_no` = #{studentNo}</if>
                <if test="@Ognl@isNotEmpty(studentName)">and `student_name` = #{studentName}</if>
                <if test="@Ognl@isNotEmpty(createTime)">and `create_time` = #{createTime}</if>
                <if test="@Ognl@isNotEmpty(provinceCode)">and `province_code` = #{provinceCode}</if>
                <if test="@Ognl@isNotEmpty(cityCode)">and `city_code` = #{cityCode}</if>
                <if test="@Ognl@isNotEmpty(areaCode)">and `area_code` = #{areaCode}</if>
                <if test="@Ognl@isNotEmpty(townCode)">and `town_code` = #{townCode}</if>
                <if test="@Ognl@isNotEmpty(parentPhone)">and `parent_phone` = #{parentPhone}</if>
                <if test="@Ognl@isNotEmpty(nation)">and `nation` = #{nation}</if>
                <if test="@Ognl@isNotEmpty(artificial)">and `artificial` = #{artificial}</if>
                <if test="@Ognl@isNotEmpty(screeningCode)">and `screening_code` = #{screeningCode}</if>
            </trim>
        </where>
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, src_screening_notice_id, screening_task_id, screening_plan_id, screening_org_id, plan_district_id, school_district_id, school_id, school_name,
        grade_id, grade_type, class_id, student_id, id_card, birthday, gender, student_age,passport,
        student_situation, student_no, student_name, create_time, province_code, city_code,area_code,town_code, address, parent_phone,nation,artificial,screening_code,`state`,
        migrate_student_screening_id
    </sql>

    <select id="selectStudentInfoWithResult" resultType="com.wupol.myopia.business.core.screening.flow.domain.dto.StudentScreeningInfoWithResultDTO">
        SELECT s.class_id AS clazzId, s.student_name, s.school_name, s.school_id, s.grade_id
        , s.student_id, s.student_age, s.screening_plan_id, s.gender
        , s.screening_task_id, r.biometric_data,r.update_time, r.computer_optometry, r.is_double_screen, r.vision_data
        , r.other_eye_diseases
        FROM m_screening_plan_school_student s
        LEFT JOIN m_vision_screening_result r ON s.id = r.screening_plan_school_student_id
        LEFT JOIN m_screening_plan p ON p.id = s.screening_plan_id
        WHERE s.school_id = #{data.schoolId} AND p.release_status = 1
        <if test="data.depId != null">
            AND s.screening_org_id = #{data.depId}
        </if>
        <if test="data.gradeId != null">
            and s.grade_id = #{data.gradeId}
        </if>
        <if test="data.classId != null">
            and s.class_id = #{data.classId}
        </if>
    </select>

    <select id="selectSchoolGradeVoByPlanIdAndSchoolId" resultMap="GradeClassesDTO">
        select grade_id, class_id from m_screening_plan_school_student
        where screening_plan_id = #{screeningPlanId} and school_id = #{schoolId}
        <if test="gradeId != null">
            AND grade_id = #{gradeId}
        </if>
        group by grade_id, class_id
    </select>


    <select id="selectPageByQuery" resultMap="ScreeningStudentDTO" parameterType="java.util.Map">
        SELECT mspss.student_id     as id,
               mspss.student_no     as sno,
               mspss.student_name   as name,
               vsc.update_time as screeningTime,
               mspss.gender,
               mspss.school_id,
               mspss.birthday,
               mspss.province_code,
               mspss.city_code,
               mspss.area_code,
               mspss.town_code,
               mspss.address,
               mspss.id_card,
               mspss.nation,
               mspss.parent_phone,
               mspss.grade_id,
               mspss.class_id,
               mspss.id as planSutdhentId,
               ms.name   as school_name,
               sg.name   as gradeName,
               sc.name   as className,
               mspss.screening_code as screeningCode,
               mspss.id             as planStudentId,
               mspss.screening_plan_id as planId,
               mspss.screening_org_id,
               mspss.passport,
               mspss.state,
               msp.screening_type
        FROM m_screening_plan_school_student mspss
        left join m_school ms on ms.id = mspss.school_id
        left join m_school_grade sg on sg.id = mspss.grade_id
        left join m_school_class sc on sc.id = mspss.class_id
        left join m_vision_screening_result vsc on vsc.screening_plan_school_student_id = mspss.id
        left join m_screening_plan msp on msp.id = mspss.screening_plan_id
        <where>
            <trim prefixOverrides="and">
                and vsc.is_double_screen = 0
                <if test="param.screeningPlanId != null">
                    AND mspss.screening_plan_id = #{param.screeningPlanId}
                </if>
                <if test="param.schoolId != null">
                    AND mspss.school_id = #{param.schoolId}
                </if>
                <if test="param.nameLike != null and param.nameLike != ''">
                    and mspss.`student_name` like CONCAT('%', #{param.nameLike}, '%')
                </if>
                <if test="param.idCardLike != null and param.idCardLike != ''">
                    and mspss.`id_card` like CONCAT('%', #{param.idCardLike}, '%')
                </if>
                <if test="param.snoLike != null and param.snoLike != ''">
                    and mspss.`student_no` like CONCAT('%', #{param.snoLike}, '%')
                </if>
                <if test="param.phoneLike != null and param.phoneLike != ''">
                    and mspss.`parent_phone` like CONCAT('%', #{param.phoneLike}, '%')
                </if>
                <if test="param.gender != null">
                    and mspss.`gender` = #{param.gender}
                </if>
                <if test="param.gradeList != null">
                    and mspss.`grade_id` in
                    <foreach collection="param.gradeList" open="(" close=")" separator="," item="item">
                        #{item}
                    </foreach>
                </if>
                <if test="param.screeningCode != null and param.screeningCode != ''">
                    and mspss.`screening_code` like CONCAT('%', #{param.screeningCode}, '%')
                </if>
                <if test="param.passportLike != null and param.passportLike != ''">
                    and mspss.`passport` like CONCAT('%', #{param.passportLike}, '%')
                </if>
                <if test="param.schoolNameLike != null and param.schoolNameLike != ''">
                    and ms.`name` like CONCAT('%', #{param.schoolNameLike}, '%')
                </if>
                <if test="param.artificial != null">
                    and mspss.artificial = #{param.artificial}
                </if>
                <if test="param.planIds != null and param.planIds.size > 0">
                    and mspss.screening_plan_id in
                    <foreach collection="param.planIds" open="(" close=")" separator="," item="item">
                        #{item}
                    </foreach>
                </if>
                <if test="param.endScreeningTime != null and param.startScreeningTime != null">
                  and   ( #{param.startScreeningTime} &lt;= vsc.update_time  and  vsc.update_time &lt; #{param.endScreeningTime} )
                </if>
                <if test="param.idCardOrPassportLike != null and param.idCardOrPassportLike != ''">
                    and (mspss.`id_card` like CONCAT('%', #{param.idCardOrPassportLike}, '%') or mspss.`passport` like CONCAT('%', #{param.idCardOrPassportLike}, '%'))
                </if>
                <if test="param.screeningType != null">
                    and msp.screening_type = #{param.screeningType}
                </if>
            </trim>
                order by mspss.id desc
        </where>
    </select>


    <select id="selectPlanStudentListByPage" resultMap="BaseResultMap" parameterType="map">
        SELECT
               spss.id,
               spss.screening_plan_id,
               spss.screening_org_id,
               spss.school_id,
               ms.name AS school_name,
               spss.grade_id,
               spss.grade_type,
               spss.class_id,
               spss.student_id,
               spss.id_card,
               spss.birthday,
               spss.gender,
               spss.student_age,
               spss.student_no,
               spss.student_name,
               spss.create_time,
               spss.screening_code
        FROM
             m_screening_plan_school_student spss
                 LEFT JOIN m_school_grade sg ON sg.id = spss.grade_id
                 LEFT JOIN m_school_class sc ON sc.id = spss.class_id
                 LEFT JOIN m_school ms ON ms.id = spss.school_id
        <where>
            <trim prefixOverrides="and">
                <if test="param.schoolId != null">
                    and spss.`school_id` = #{param.schoolId}
                </if>
                <if test="param.gradeId != null">
                    and spss.`grade_id` = #{param.gradeId}
                </if>
                <if test="param.classId != null">
                    and spss.`class_id` = #{param.classId}
                </if>
                <if test="param.screeningPlanId != null">
                    and spss.`screening_plan_id` = #{param.screeningPlanId}
                </if>
                <if test="param.planIds != null">
                    and spss.`screening_plan_id` in
                    <foreach collection="param.planIds" open="(" close=")" separator="," item="item">
                        #{item}
                    </foreach>
                </if>
                <if test="param.nameLike != null and param.nameLike != ''">
                    and spss.`student_name` like CONCAT('%', #{param.nameLike}, '%')
                </if>
            </trim>
        </where>
    </select>

    <select id="selectByIdCards" resultMap="BaseResultMap" parameterType="java.util.Map">
        select *
        from m_screening_plan_school_student
        where screening_plan_id = #{screeningPlanId} and school_id = #{schoolId}
        and id_card in <foreach collection="idCards" open="(" close=")" separator="," item="item">#{item}</foreach>
    </select>

    <select id="selectByGradeAndClass" resultMap="ScreeningStudentDTO" parameterType="java.util.Map">
        select mspss.student_name      as name,
               mspss.student_no        as sno,
               mspss.gender,
               mspss.student_id        as id,
               mspss.screening_plan_id as planId,
               mspss.id                as planStudentId,
               mspss.student_age       as age,
               mspss.screening_code
        from m_screening_plan_school_student mspss
        where mspss.screening_plan_id = #{screeningPlanId}
          and mspss.grade_id = #{gradeId}
          and mspss.class_id = #{classId}
    </select>
    <select id="selectBySchoolGradeAndClass" resultMap="ScreeningStudentDTO" parameterType="java.util.Map">
        select mspss.student_name      as name,
               mspss.student_no        as sno,
               mspss.school_name       as schoolName,
               mspss.grade_id          as gradeId,
               mspss.class_id          as classId,
               mspss.gender,
               mspss.student_id        as id,
               mspss.screening_plan_id as planId,
               mspss.id                as planStudentId,
               mspss.student_age       as age,
               mspss.birthday          as birthday,
               mspss.screening_code
        from m_screening_plan_school_student mspss
        where mspss.screening_plan_id = #{screeningPlanId}
        <if test="schoolId != null">
            and mspss.school_id = #{schoolId}
        </if>
        <if test="gradeId != null">
            and mspss.grade_id = #{gradeId}
        </if>
        <if test="classId != null">
            and mspss.class_id = #{classId}
        </if>
        <if test="studentIds != null">
            and mspss.student_id in
            <foreach collection="studentIds" open="(" close=")" separator="," item="studentId">
                #{studentId}
            </foreach>
        </if>
    </select>

    <select id="getReleasePlanStudentByStudentId" resultMap="BaseResultMap">
        select s.*
        from m_screening_plan_school_student s
        left join m_screening_plan p on p.id = s.screening_plan_id
        where s.student_id = #{studentId} and p.release_status = 1
    </select>

    <select id="findByPlanId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_screening_plan_school_student
        where screening_plan_id = #{planId}
    </select>

    <select id="findSchoolIdsByPlanId" resultType="java.lang.Integer">
        select distinct school_id from m_screening_plan_school_student where screening_plan_id = #{planId}
    </select>

    <select id="findByPlanIdAndSchoolId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_screening_plan_school_student
        where screening_plan_id = #{planId}
          and school_id = #{schoolId}
    </select>

    <select id="countByPlanId" resultType="java.lang.Integer">
        select count(1)
        from m_screening_plan_school_student
        where screening_plan_id = #{planId}
    </select>

    <select id="countBySchoolIdAndNoticeId" resultType="java.lang.Integer">
        select count(1)
        from m_screening_plan_school_student
        where school_id = #{schoolId}
          and src_screening_notice_id = #{noticeId}
    </select>

    <select id="getSchoolCountByPlanId" resultMap="SchoolCountDO">
        select school_id, count(*) as school_count
        from m_screening_plan_school_student
        where screening_plan_id = #{planId} GROUP BY school_id
    </select>

    <delete id="deleteByPlanIdAndExcludeSchoolIds">
        delete
        from m_screening_plan_school_student
                where screening_plan_id = #{screeningPlanId}
        <if test="excludeSchoolIds != null and excludeSchoolIds.size() != 0">
            and school_id not in
            <foreach collection="excludeSchoolIds" open="(" close=")" separator="," item="schoolId">
                #{schoolId}
            </foreach>
        </if>
    </delete>

    <select id="getByScreeningCodes" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_screening_plan_school_student where screening_code in
        <foreach collection="screeningCodes" item="screeningCode" index="index" open="(" close=")" separator=",">
            #{screeningCode}
        </foreach>
        and screening_plan_id = #{planId}
    </select>

    <select id="getByPlanIdAndSchoolIdAndGradeId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_screening_plan_school_student
                where screening_plan_id = #{planId}
                  and school_id = #{schoolId}
        <if test="gradeId != null">
            and grade_id = #{gradeId}
        </if>
    </select>

    <select id="getByPlanIdAndSchoolIdAndGradeIdAndClassId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_screening_plan_school_student
                where screening_plan_id = #{planId}
        <if test="schoolId != null">
            and school_id = #{schoolId}
        </if>
        <if test="gradeId != null">
            and grade_id = #{gradeId}
        </if>
        <if test="classId != null">
            and class_id = #{classId}
        </if>
    </select>

    <select id="getOneByStudentName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_screening_plan_school_student
        where student_name = #{name}
        limit 1
    </select>

    <select id="getLastByStudentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_screening_plan_school_student
        where student_id = #{studentId}
        order by create_time desc
        limit 1
    </select>

    <select id="getScreeningNoticeResultStudent" resultMap="ScreeningStudentDTO">
        select mspss.student_name      as name,
               mspss.student_no        as sno,
               mspss.gender,
               mspss.student_id        as id,
               mspss.screening_plan_id as planId,
               mspss.id                as planStudentId,
               mspss.student_age       as age,
               mspss.screening_code,
               mspss.birthday          as birthday,
               mspss.school_id as schoolId,
               mspss.grade_id as gradeId,
               mspss.class_id as classId
        from m_screening_plan_school_student mspss
        left join m_vision_screening_result mvsr
        on  mspss.id = mvsr.screening_plan_school_student_id
        and mspss.screening_plan_id = mvsr.plan_id
        and mspss.school_id = mvsr.school_id
            where 1 = 1
        <if test="isFilterDoubleScreen != null and isFilterDoubleScreen == 1">
            and mvsr.is_double_screen = 0
        </if>
        <if test="planIds != null">
            and mspss.screening_plan_id in
            <foreach collection="planIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="schoolId != null">
            and mspss.school_id = #{schoolId}
        </if>
        <if test="gradeId != null">
            and mspss.grade_id = #{gradeId}
        </if>
        <if test="classId != null">
            and mspss.class_id = #{classId}
        </if>
        <if test="planStudentId != null">
            and mspss.id in
            <foreach collection="planStudentId" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        <if test="planStudentName != null and planStudentName != ''">
            and mspss.student_name like CONCAT('%', #{planStudentName}, '%')
        </if>
    </select>

    <select id="getByPlanIdAndSchoolIdAndId" resultMap="GradeClassesDTO">
        select grade_id, class_id
        from m_screening_plan_school_student
                where screening_plan_id = #{planId}
                  and school_id = #{schoolId}
                  and id in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        group by grade_id, class_id
    </select>

    <select id="getByIdCardAndPassport" resultMap="BaseResultMap">
        select *
        from m_screening_plan_school_student where 0 = 0
        <if test="idCard != null and idCard != ''">
            and id_card = #{idCard}
        </if>
        <if test="passport != null and passport != ''">
            and passport = #{passport}
        </if>
        <if test="id != null">
            and id != #{id}
        </if>
    </select>

    <delete id="deleteByStudentIds">
        delete
        from m_screening_plan_school_student where student_id in
        <foreach collection="studentIds" item="studentId" index="index" open="(" close=")" separator=",">
            #{studentId}
        </foreach>
    </delete>

    <select id="getByNePlanId" resultMap="BaseResultMap">
        select *
        from m_screening_plan_school_student
        where screening_plan_id != #{planId}
    </select>

    <select id="getOneByPlanId" resultMap="BaseResultMap">
        select *
        from m_screening_plan_school_student
        where screening_plan_id = #{planId}
        limit 1
    </select>

    <select id="getGradeByPlanIdAndSchoolId" resultMap="GradeClassesDTO">
        select *
        from m_screening_plan_school_student
        where school_id = #{schoolId}
          and screening_plan_id = #{planId}
        group by grade_id, class_id
    </select>

    <select id="getReviewStudentList" resultMap="BaseResultMap">
        select mspss.*
        from m_screening_plan_school_student mspss
                 left join m_vision_screening_result mvsr on mspss.id = mvsr.screening_plan_school_student_id
                 left join m_stat_conclusion msc on msc.result_id = mvsr.id
        where mvsr.plan_id = #{planId}
          and mvsr.screening_org_id = #{orgId}
        <if test="schoolId != null">
            and mvsr.school_id = #{schoolId}
        </if>
        <if test="gradeId != null">
            and mspss.grade_id = #{gradeId}
        </if>
        <if test="classId != null">
            and mspss.class_id = #{classId}
        </if>
        and mvsr.is_double_screen = 0
       and msc.is_review = 1
    </select>

    <select id="getByPlanIdIdCardAndPassport" resultMap="BaseResultMap">
        select *
        from m_screening_plan_school_student where screening_plan_id = #{planId}
        <if test="idCard != null and idCard != ''">
            and id_card = #{idCard}
        </if>
        <if test="passport != null and passport != ''">
            and passport = #{passport}
        </if>
        <if test="id != null">
            and id != #{id}
        </if>
    </select>

    <select id="selectCommonDiseaseScreeningPlanStudent" resultMap="CommonDiseasePlanStudent">
        SELECT
               mspss.id,
               mspss.school_id,
               mspss.grade_id,
               mspss.school_district_id,
               mspss.student_id,
               msp.start_time as plan_start_time,
               msp.id as plan_id
        FROM
             m_screening_plan_school_student mspss
                 LEFT JOIN m_screening_plan msp ON mspss.screening_plan_id = msp.id
        WHERE
                mspss.school_id = #{schoolId}
          AND msp.screening_type = 1
    </select>

    <select id="getByNoticeIdsAndSchoolIds" resultMap="BaseResultMap">
        select *
        from m_screening_plan_school_student where src_screening_notice_id in
        <foreach collection="noticeIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and school_id in
        <foreach collection="schoolIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    <select id="getLastByCredentialNoAndStudentName" resultMap="BaseResultMap">
        SELECT spss.*
        FROM m_screening_plan_school_student spss
        WHERE (spss.id_card = #{credentialNo} OR spss.passport = #{credentialNo})
          and spss.student_name = #{studentName}
    </select>
    <select id="getLastByCredentialNoAndStudentIds"
            resultType="com.wupol.myopia.business.core.screening.flow.domain.model.ScreeningPlanSchoolStudent">
        SELECT spss.* FROM m_screening_plan_school_student spss
        LEFT JOIN m_screening_plan sp ON sp.id = spss.screening_plan_id
        WHERE sp.screening_type = #{screeningType} and spss.student_id in
        <foreach collection="studentIds" item="studentId" index="index" open="(" separator="," close=")">
            #{studentId}
        </foreach>
        AND sp.id in
        <foreach collection="planId" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
        ORDER BY sp.start_time DESC, spss.create_time DESC LIMIT 1
    </select>

    <select id="getInfoByPlanId" resultMap="BaseResultMap">
        select
        student_no, school_id, id_card, passport
        from m_screening_plan_school_student
        where screening_plan_id = #{planId}
    </select>
    <select id="findStudentBySchoolIdAndScreeningPlanIdAndSno" resultMap="PlanStudentInfoDTO">
        select
            mspss.*,
            ms.sno as sno
        from m_screening_plan_school_student as mspss
        left join m_student as ms on mspss.student_id = ms.id
        where mspss.screening_plan_id = #{planId} and mspss.school_id = #{schoolId}
        and ms.sno in
        <foreach collection="snoList" item="sno" index="index" open="(" separator="," close=")">
            #{sno}
        </foreach>
    </select>
</mapper>
