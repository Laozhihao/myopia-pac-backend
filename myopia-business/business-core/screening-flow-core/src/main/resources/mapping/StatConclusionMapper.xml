<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wupol.myopia.business.core.screening.flow.domain.mapper.StatConclusionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.wupol.myopia.business.core.screening.flow.domain.model.StatConclusion"></resultMap>
    <!-- Vo查询映射结果 -->
    <resultMap id="VoResultMap" type="com.wupol.myopia.business.core.screening.flow.domain.dto.StatConclusionDTO"></resultMap>
    <!-- ExportVo查询映射结果 -->
    <resultMap id="ExportVoResultMap" type="com.wupol.myopia.business.core.screening.flow.domain.dto.StatConclusionExportDTO">
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="vision_data" property="visionData" />
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="computer_optometry" property="computerOptometry" />
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="ocular_inspection_data" property="ocularInspectionData" />
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="eye_pressure_data" property="eyePressureData" />
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="fundus_data" property="fundusData" />
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="slit_lamp_data" property="slitLampData" />
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="pupil_optometry_data" property="pupilOptometryData" />
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="biometric_data" property="biometricData" />
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="visual_loss_level_data" property="visualLossLevelData" />
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="other_eye_diseases" property="otherEyeDiseases" />
    </resultMap>

    <resultMap id="ReportVoResultMap" type="com.wupol.myopia.business.core.screening.flow.domain.dto.StatConclusionReportDTO">
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="vision_data" property="visionData" />
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="computer_optometry" property="computerOptometry" />
    </resultMap>

    <resultMap id="PlanAndSchoolMap" type="com.wupol.myopia.business.core.screening.flow.domain.dto.ScreenPlanSchoolDTO">
    </resultMap>

    <!-- 通用查询条件 -->
    <sql id="Base_Where_Clause">
        <where>
            <trim prefixOverrides="and">
                <if test="@Ognl@isNotEmpty(id)">and `id` = #{id}</if>
                <if test="@Ognl@isNotEmpty(resultId)">and `result_id` = #{resultId}</if>
                <if test="@Ognl@isNotEmpty(srcScreeningNoticeId)">and `src_screening_notice_id` = #{srcScreeningNoticeId}</if>
                <if test="@Ognl@isNotEmpty(taskId)">and `task_id` = #{taskId}</if>
                <if test="@Ognl@isNotEmpty(planId)">and `plan_id` = #{planId}</if>
                <if test="@Ognl@isNotEmpty(screeningPlanSchoolStudentId)">and `screening_plan_school_student_id` = #{screeningPlanSchoolStudentId}</if>
                <if test="@Ognl@isNotEmpty(districtId)">and `district_id` = #{districtId}</if>
                <if test="@Ognl@isNotEmpty(schoolAge)">and `school_age` = #{schoolAge}</if>
                <if test="@Ognl@isNotEmpty(age)">and `age` = #{age}</if>
                <if test="@Ognl@isNotEmpty(gender)">and `gender` = #{gender}</if>
                <if test="@Ognl@isNotEmpty(warningLevel)">and `warning_level` = #{warningLevel}</if>
                <if test="@Ognl@isNotEmpty(visionL)">and `vision_l` = #{visionL}</if>
                <if test="@Ognl@isNotEmpty(visionR)">and `vision_r` = #{visionR}</if>
                <if test="@Ognl@isNotEmpty(isLowVision)">and `is_low_vision` = #{isLowVision}</if>
                <if test="@Ognl@isNotEmpty(isRefractiveError)">and `is_refractive_error` = #{isRefractiveError}</if>
                <if test="@Ognl@isNotEmpty(isMyopia)">and `is_myopia` = #{isMyopia}</if>
                <if test="@Ognl@isNotEmpty(isHyperopia)">and `is_hyperopia` = #{isHyperopia}</if>
                <if test="@Ognl@isNotEmpty(isAstigmatism)">and `is_astigmatism` = #{isAstigmatism}</if>
                <if test="@Ognl@isNotEmpty(isRecommendVisit)">and `is_recommend_visit` = #{isRecommendVisit}</if>
                <if test="@Ognl@isNotEmpty(isRescreen)">and `is_rescreen` = #{isRescreen}</if>
                <if test="@Ognl@isNotEmpty(screeningOrgId)">and `screening_org_id` = #{screeningOrgId}</if>
                <if test="@Ognl@isNotEmpty(rescreenErrorNum)">and `rescreen_error_num` = #{rescreenErrorNum}</if>
                <if test="@Ognl@isNotEmpty(isValid)">and `is_valid` = #{isValid}
                <if test="@Ognl@isNotEmpty(studentId)">and `student_id` = #{studentId}</if></if>
                <if test="@Ognl@isNotEmpty(updateTime)">and `update_time` = #{updateTime}</if>
                <if test="@Ognl@isNotEmpty(createTime)">and `create_time` = #{createTime}</if>
                <if test="@Ognl@isNotEmpty(schoolId)">and `school_id` = #{schoolId}</if>
                <if test="@Ognl@isNotEmpty(schoolGradeCode)">and `school_grade_code` = #{schoolGradeCode}</if>
                <if test="@Ognl@isNotEmpty(isVisionWarning)">and `is_vision_warning` = #{isVisionWarning}</if>
                <if test="@Ognl@isNotEmpty(visionWarningUpdateTime)">and `vision_warning_update_time` = #{visionWarningUpdateTime}</if>
                <if test="@Ognl@isNotEmpty(schoolClassName)">and `school_class_name` = #{schoolClassName}</if>
                <if test="@Ognl@isNotEmpty(myopiaWarningLevel)">and `myopia_warning_level` = #{myopiaWarningLevel}</if>
                <if test="@Ognl@isNotEmpty(nakedVisionWarningLevel)">and `naked_vision_warning_level` = #{nakedVisionWarningLevel}</if>
                <if test="@Ognl@isNotEmpty(glassesType)">and `glasses_type` = #{glassesType}</if>
                <if test="@Ognl@isNotEmpty(visionCorrection)">and `vision_correction` = #{visionCorrection}</if>
                <if test="@Ognl@isNotEmpty(startTime)">
                    and `create_time`
                    <![CDATA[>=]]>
                    #{startTime}
                </if>
                <if test="@Ognl@isNotEmpty(endTime)">
                    and `create_time`
                    <![CDATA[<]]>
                    #{endTime}
                </if>
                <if test="districtIds != null and districtIds.size() != 0">
                    and `district_id` in
                    <foreach collection="districtIds" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </if>
            </trim>
        </where>
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, update_time,student_id, is_vision_warning,vision_warning_update_time, age, result_id, screening_org_id, screening_plan_school_student_id,src_screening_notice_id,task_id, plan_id, district_id, school_age, gender, warning_level, vision_l, vision_r, is_low_vision, is_refractive_error, is_myopia, is_hyperopia, is_astigmatism,  is_recommend_visit, is_rescreen, rescreen_error_num, is_valid, create_time, school_id, school_grade_code, school_class_name, myopia_warning_level, naked_vision_warning_level, glasses_type, vision_correction,myopia_level,hyperopia_level,astigmatism_level,
        is_bind_mp,report_id
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="Export_Vo_List">
        mspss.student_name, mspss.gender, mspss.birthday, mspss.nation, mspss.school_id, mspss.school_no, mspss.school_name, mspss.grade_name, mspss.class_name,
        mspss.student_no, mspss.id_card, mspss.parent_phone, mspss.province_code, mspss.city_code, mspss.town_code, mspss.area_code, mspss.address,
        mvsr.vision_data, mvsr.computer_optometry, msc.glasses_type, msc.warning_level, msc.is_rescreen, msc.screening_plan_school_student_id,
        mvsr.ocular_inspection_data,mvsr.eye_pressure_data,mvsr.fundus_data,mvsr.slit_lamp_data,mvsr.pupil_optometry_data,mvsr.visual_loss_level_data,
        mvsr.systemic_disease_symptom,mvsr.biometric_data,mvsr.other_eye_diseases, mspss.grade_id, mspss.class_id
    </sql>

    <select id="selectLastOne" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT *
        FROM m_stat_conclusion
        <include refid="Base_Where_Clause" />
        ORDER by id desc
        LIMIT 0, 1
    </select>

    <select id="listByQuery" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT *
        FROM m_stat_conclusion
        <include refid="Base_Where_Clause" />
    </select>

    <select id="selectVoByScreeningPlanId" resultMap="VoResultMap" parameterType="java.util.Map">
        SELECT msc.*, mvsr.school_id
        FROM m_stat_conclusion msc
        LEFT JOIN m_vision_screening_result mvsr ON msc.result_id = mvsr.id
        WHERE msc.plan_id = #{screeningPlanId}
    </select>

    <select id="selectExportVoByScreeningNoticeIdAndDistrictIds" resultMap="ExportVoResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Export_Vo_List" />
        FROM m_stat_conclusion msc
        LEFT JOIN m_vision_screening_result mvsr ON msc.result_id = mvsr.id
        LEFT JOIN m_screening_plan_school_student mspss ON msc.screening_plan_school_student_id = mspss.id
        WHERE msc.src_screening_notice_id = #{screeningNoticeId}
        AND msc.district_id IN
        <foreach collection="districtIds" item="id" index="index" open="(" close=")" separator=",">#{id}</foreach>
        ORDER BY mspss.school_name, mspss.grade_name, mspss.class_name, mspss.student_no
    </select>

    <select id="selectExportVoByScreeningNoticeIdAndSchoolId" resultMap="ExportVoResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Export_Vo_List" />
        FROM m_stat_conclusion msc
        LEFT JOIN m_vision_screening_result mvsr ON msc.result_id = mvsr.id
        LEFT JOIN m_screening_plan_school_student mspss ON msc.screening_plan_school_student_id = mspss.id
        WHERE msc.src_screening_notice_id = #{screeningNoticeId}
        AND msc.school_id = #{schoolId}
        ORDER BY mspss.school_name, mspss.grade_name, mspss.class_name, mspss.student_no
    </select>

    <select id="selectExportVoByScreeningPlanIdAndSchoolId" resultMap="ExportVoResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Export_Vo_List" />
        FROM m_stat_conclusion msc
        LEFT JOIN m_vision_screening_result mvsr ON msc.result_id = mvsr.id
        LEFT JOIN m_screening_plan_school_student mspss ON msc.screening_plan_school_student_id = mspss.id
        WHERE msc.plan_id = #{screeningPlanId}
        AND msc.school_id = #{schoolId}
        ORDER BY mspss.school_name, mspss.grade_name, mspss.class_name, mspss.student_no
    </select>

    <select id="selectExportVoByScreeningNoticeIdAndScreeningOrgId" resultMap="ExportVoResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Export_Vo_List" />
        FROM m_stat_conclusion msc
        LEFT JOIN m_vision_screening_result mvsr ON msc.result_id = mvsr.id
        LEFT JOIN m_screening_plan_school_student mspss ON msc.screening_plan_school_student_id = mspss.id
        WHERE msc.src_screening_notice_id = #{screeningNoticeId}
        AND mvsr.screening_org_id = #{screeningOrgId}
        ORDER BY mspss.school_name, mspss.grade_name, mspss.class_name, mspss.student_no
    </select>

    <select id="selectExportVoByScreeningPlanIdAndScreeningOrgId" resultMap="ExportVoResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Export_Vo_List" />
        FROM m_stat_conclusion msc
        LEFT JOIN m_vision_screening_result mvsr ON msc.result_id = mvsr.id
        LEFT JOIN m_screening_plan_school_student mspss ON msc.screening_plan_school_student_id = mspss.id
        WHERE msc.plan_id = #{screeningPlanId}
        AND mvsr.screening_org_id = #{screeningOrgId}
        ORDER BY mspss.school_name, mspss.grade_name, mspss.class_name, mspss.student_no
    </select>

    <select id="selectReportVoByQuery" resultMap="ReportVoResultMap" parameterType="java.util.Map">
        SELECT mspss.student_name,
         mspss.gender,
         mspss.school_id,
         mspss.grade_name,
         mspss.class_name,
         mvsr.vision_data,
         mvsr.computer_optometry,
         msc.school_grade_code,
         msc.glasses_type,
         msc.naked_vision_warning_level,
         msc.screening_plan_school_student_id,
         msc.vision_correction
        FROM m_stat_conclusion msc
        LEFT JOIN m_vision_screening_result mvsr ON msc.result_id = mvsr.id
        LEFT JOIN m_screening_plan_school_student mspss ON msc.screening_plan_school_student_id = mspss.id
        WHERE msc.is_valid = 1
        AND msc.is_rescreen = 0
        <if test="@Ognl@isNotEmpty(screeningNoticeId)">
            and msc.src_screening_notice_id = #{screeningNoticeId}</if>
        <if test="@Ognl@isNotEmpty(planId)">
            and msc.plan_id = #{planId}</if>
        AND msc.school_id = #{schoolId}
        ORDER BY mspss.school_name, mspss.grade_name, mspss.class_name, mspss.student_no
    </select>

    <select id="selectSchoolIdsByScreeningNoticeIdAndDistrictIds" resultType="int" parameterType="java.util.Map">
        select distinct school_id from m_stat_conclusion
        WHERE src_screening_notice_id = #{screeningNoticeId}
        AND district_id IN
        <foreach collection="districtIds" item="id" index="index" open="(" close=")" separator=",">#{id}</foreach>
    </select>

    <select id="selectSchoolIdByPlanId" resultType="int" parameterType="integer">
        select distinct school_id from m_stat_conclusion where plan_id = #{planId}
    </select>

    <select id="getPlanSchoolByDate" resultMap="PlanAndSchoolMap">
        select plan_id, school_id from m_stat_conclusion
        where DATE(create_time) = DATE(#{date}) and is_valid = 1
        <if test="@Ognl@isNotEmpty(isRescreen)">
            and is_rescreen = #{isRescreen}
        </if>
        group by plan_id, school_id
    </select>

    <select id="getNextScreeningStat" resultMap="BaseResultMap">
        SELECT
                *
        FROM
             m_stat_conclusion
        WHERE
                student_id = #{studentId}
          AND id > #{statConclusionId}
        LIMIT 1
    </select>

    <select id="getByResultIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_stat_conclusion msc where msc.result_id in
        <foreach collection="resultIds" item="resultId" index="index" open="(" close=")" separator=",">
            #{resultId}
        </foreach>
    </select>

    <select id="getByDate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_stat_conclusion
        where create_time between DATE(#{start}) and DATE(#{end})
    </select>

    <select id="getTrackList"
            resultType="com.wupol.myopia.business.core.screening.flow.domain.dto.StudentTrackWarningResponseDTO">
        select msc.student_id,
               msc.report_id,
               mspss.student_name as name,
               mspss.gender,
               mspss.class_name,
               mspss.grade_name,
               mspss.student_no   as sno,
               msc.warning_level,
               msc.myopia_level,
               msc.hyperopia_level,
               msc.astigmatism_level,
               msc.is_bind_mp
        from m_stat_conclusion msc
                     left join m_screening_plan_school_student mspss on msc.screening_plan_school_student_id = mspss.id
                where msc.plan_id = #{requestDTO.planId}
                  and msc.school_id = #{schoolId}
        <if test="requestDTO.classId != null">
            and mspss.class_id = #{requestDTO.classId}
        </if>
        <if test="requestDTO.gradeId != null">
            and mspss.grade_id = #{requestDTO.gradeId}
        </if>
        <if test="requestDTO.isBindMq != null">
            and msc.is_bind_mp = #{requestDTO.isBindMq}
        </if>
        <if test="requestDTO.visionLabel != null">
            and msc.warning_level = #{requestDTO.visionLabel}
        </if>
        <if test="requestDTO.isReview != null">
            <choose>
                <when test="requestDTO.isReview == true">
                    and msc.report_id IS NOT NULL
                </when>
                <when test="requestDTO.isReview == false">
                    and msc.report_id IS NULL
                </when>
            </choose>
        </if>
    </select>

    <select id="getByPlanStudentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_stat_conclusion
        where screening_plan_school_student_id = #{planStudentId}
    </select>
</mapper>
