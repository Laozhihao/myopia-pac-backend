<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wupol.myopia.business.core.school.domain.mapper.SchoolMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.wupol.myopia.business.core.school.domain.model.School">
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="notification_config" property="notificationConfig"/>
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="result_notice_config" property="resultNoticeConfig"/>
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="screening_config" property="screeningConfig"/>
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="data_submit_config" property="dataSubmitConfig"/>
    </resultMap>

    <resultMap id="BaseResultMapDto" type="com.wupol.myopia.business.core.school.domain.dto.SchoolResponseDTO">
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="notification_config" property="notificationConfig"/>
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="result_notice_config" property="resultNoticeConfig"/>
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="screening_config" property="screeningConfig"/>
        <result typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" column="data_submit_config" property="dataSubmitConfig"/>
    </resultMap>

    <!-- 通用查询条件 -->
    <sql id="Base_Where_Clause">
        <where>
            <trim prefixOverrides="and">
                <if test="@Ognl@isNotEmpty(id)">and `id` = #{id}</if>
                <if test="@Ognl@isNotEmpty(schoolNo)">and `school_no` = #{schoolNo}</if>
                <if test="@Ognl@isNotEmpty(createUserId)">and `create_user_id` = #{createUserId}</if>
                <if test="@Ognl@isNotEmpty(govDeptId)">and `gov_dept_id` = #{govDeptId}</if>
                <if test="@Ognl@isNotEmpty(districtId)">and `district_id` = #{districtId}</if>
                <if test="@Ognl@isNotEmpty(districtProvinceCode)">and `district_province_code` = #{districtProvinceCode}</if>
                <if test="@Ognl@isNotEmpty(districtDetail)">and `district_detail` = #{districtDetail}</if>
                <if test="@Ognl@isNotEmpty(name)">and `name` = #{name}</if>
                <if test="@Ognl@isNotEmpty(kind)">and `kind` = #{kind}</if>
                <if test="@Ognl@isNotEmpty(kindDesc)">and `kind_desc` = #{kindDesc}</if>
                <if test="@Ognl@isNotEmpty(lodgeStatus)">and `lodge_status` = #{lodgeStatus}</if>
                <if test="@Ognl@isNotEmpty(type)">and `type` = #{type}</if>
                <if test="@Ognl@isNotEmpty(provinceCode)">and `province_code` = #{provinceCode}</if>
                <if test="@Ognl@isNotEmpty(cityCode)">and `city_code` = #{cityCode}</if>
                <if test="@Ognl@isNotEmpty(areaCode)">and `area_code` = #{areaCode}</if>
                <if test="@Ognl@isNotEmpty(townCode)">and `town_code` = #{townCode}</if>
                <if test="@Ognl@isNotEmpty(address)">and `address` = #{address}</if>
                <if test="@Ognl@isNotEmpty(remark)">and `remark` = #{remark}</if>
                <if test="@Ognl@isNotEmpty(status)">and `status` = #{status}</if>
                <if test="@Ognl@isNotEmpty(cooperationType)">and `cooperation_type` = #{cooperationType}</if>
                <if test="@Ognl@isNotEmpty(cooperationTimeType)">and `cooperation_time_type` = #{cooperationTimeType}</if>
                <if test="@Ognl@isNotEmpty(cooperationStartTime)">and `cooperation_start_time` = #{cooperationStartTime}</if>
                <if test="@Ognl@isNotEmpty(cooperationEndTime)">and `cooperation_end_time` = #{cooperationEndTime}</if>
                <if test="@Ognl@isNotEmpty(createTime)">and `create_time` = #{createTime}</if>
                <if test="@Ognl@isNotEmpty(updateTime)">and `update_time` = #{updateTime}</if>
                <if test="districtIds != null and districtIds.size() != 0">
                    and `district_id` in
                    <foreach collection="districtIds" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </if>
                <if test="@Ognl@isNotEmpty(districtAreaCode)">and `district_area_code` = #{districtAreaCode}</if>
                <if test="@Ognl@isNotEmpty(areaType)">and `area_type` = #{areaType}</if>
                <if test="@Ognl@isNotEmpty(monitorType)">and `monitor_type` = #{monitorType}</if>

                <!-- 模糊查询 -->
                <if test="nameLike != null">and `name` like CONCAT("%",#{nameLike},"%")</if>
                <if test="noLike != null">and school_no like CONCAT("%",#{noLike},"%")</if>
                <if test="code != null">
                    and (city_code = #{code} or area_code = #{code} or town_code = #{code})
                </if>
            </trim>
        </where>
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, school_no, create_user_id, gov_dept_id, district_id, district_province_code, district_detail, name, kind, kind_desc, lodge_status, type, province_code, city_code, area_code, town_code, address,
        remark, status, cooperation_type, cooperation_time_type, cooperation_start_time, cooperation_end_time, create_time, update_time, district_area_code, area_type, monitor_type, notification_config, result_notice_config,
        vision_team_count,screening_config,screening_type_config,is_independent_screening,data_submit_config
    </sql>

    <select id="getSchoolListByCondition" resultMap="BaseResultMapDto">
        select ms.*
        from m_school ms
                where ms.status != 2
        <if test="districtCode != null">
            and ms.district_province_code = #{districtCode}
        </if>
        <if test="query.name != null and query.name != ''">
            and ms.name like CONCAT('%', #{query.name}, '%')
        </if>
        <if test="query.schoolNo != null and query.schoolNo != ''">
            and ms.school_no like CONCAT('%', #{query.schoolNo}, '%')
        </if>
        <if test="query.type != null">
            and ms.type = #{query.type}
        </if>
        <if test="districtId != null">
            and ms.district_id = #{districtId}
        </if>
        <if test="query.cooperationType != null">
            and ms.cooperation_type = #{query.cooperationType}
        </if>
        <if test="@Ognl@isNotEmpty(query.cooperationEndTimeGe)">
            and ms.cooperation_end_time &gt;= #{query.cooperationEndTimeGe}
        </if>
        <if test="@Ognl@isNotEmpty(query.cooperationEndTimeLe)">
            and ms.cooperation_end_time &lt;= #{query.cooperationEndTimeLe}
        </if>
        <if test="@Ognl@isNotEmpty(query.expireDayGt) and query.expireDayGt != -1">
            and LEAST(DATEDIFF(ms.cooperation_end_time, ms.cooperation_start_time),DATEDIFF(ms.cooperation_end_time, now())) &gt; #{query.expireDayGt}
        </if>
        <if test="@Ognl@isNotEmpty(query.expireDayLe) and query.expireDayLe != -1">
            and LEAST(DATEDIFF(ms.cooperation_end_time, ms.cooperation_start_time),DATEDIFF(ms.cooperation_end_time, now())) &lt;= #{query.expireDayLe}
        </if>
        <if test="userIds != null and userIds.size() != 0">
            and ms.create_user_id in
            <foreach collection="userIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <choose>
            <when test="query.createByUserId != null and query.createByUserId.size() != 0 and query.schoolIds != null and query.schoolIds.size() != 0">
                and (ms.create_user_id in
                <foreach collection="query.createByUserId" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                    or ms.id in
                <foreach collection="query.schoolIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                )
            </when>
            <otherwise>
                <if test="query.createByUserId != null and query.createByUserId.size() != 0">
                    and ms.create_user_id = #{query.createByUserId}
                </if>
            </otherwise>
        </choose>
        <if test="query.isOverviewUser != null and query.isOverviewUser == 1">
            <if test="query.schoolIds != null and query.schoolIds.size() != 0">
                and ms.id in
                <foreach collection="query.schoolIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </if>
        order by ms.create_time desc
    </select>

    <select id="getByQuery" resultMap="BaseResultMap">
        select *
        from m_school
        <include refid="Base_Where_Clause" />
    </select>

    <select id="getSimpleSchool" resultType="com.wupol.myopia.business.core.school.domain.dos.SimpleSchoolDO">
        select id, name
        from m_school
        <include refid="Base_Where_Clause" />
    </select>

    <select id="getByPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school
        <include refid="Base_Where_Clause"/>
    </select>

    <select id="getByName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school
        where name like CONCAT('%', #{name}, '%')
    </select>

    <select id="getByNoNeId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school
                where school_no = #{schoolNo}
        <if test="id != null">
            and id != #{id}
        </if>
    </select>

    <select id="getBySchoolNo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school
        where school_no = #{schoolNo}
    </select>

    <select id="getBySchoolNos" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school where school_no in
        <foreach collection="schoolNos" item="no" index="index" open="(" close=")" separator=",">
            #{no}
        </foreach>
    </select>

    <select id="getByDistrictId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school
        where district_id = #{districtId}
    </select>

    <select id="getByNameNeId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school
                where name = #{name}
        <if test="id != null">
            and id != #{id}
        </if>
    </select>

    <select id="selectDistrictIdsBySchoolIds" resultType="java.lang.Integer">
        SELECT DISTINCT district_id
        FROM m_school
        WHERE id IN
        <foreach collection="schoolIds" item="id" index="index" open="(" close=")" separator=",">
          #{id}
        </foreach>
    </select>

    <update id="updateStatus">
        update m_school
        set status = #{request.status}
        where id = #{request.id}
    </update>

    <select id="getBySchoolId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school
        where id = #{id}
    </select>

    <select id="getByCooperationTimeAndStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school
        <!-- 已过期但状态为可用 或 已开始合作但状态为停用 -->
        where
        (cooperation_end_time &lt; #{date} and `status` = 0)
        or
        (cooperation_start_time &lt; #{date} and cooperation_end_time &gt; #{date} and `status` = 1)
    </select>

    <update id="updateSchoolStatus">
        update m_school
        set status = #{targetStatus}
        where id = #{id}
        and status = #{sourceStatus}
    </update>

    <select id="getByCooperationEndTime" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school
        where cooperation_start_time &lt; #{start} and
        Date(cooperation_end_time) = Date(#{end})
    </select>

    <select id="getBySchoolIdAndGradeIdAndClassId"
            resultType="com.wupol.myopia.business.core.school.domain.vo.SchoolGradeClassVO">
        select ms.name as schoolName, msg.name as gradeName, msc.name as className
        from m_school ms
                     left join m_school_grade msg on msg.school_id = ms.id
                     left join m_school_class msc on msc.school_id = ms.id
        where ms.id = #{schoolId}
          and msg.id = #{gradeId}
          and msc.id = #{classId}
    </select>

    <select id="getListByProvinceCodeAndNameLike" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_school
        where name like concat('%', #{name}, '%')
          and json_extract(cast(district_detail as json), '$[0].code') = #{provinceDistrictCode}
    </select>

    <select id="getBySchoolIds" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM m_school
        WHERE id IN
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
</mapper>
